#!/bin/bash

JSON=/usr/local/etc/scenario-status.json

STEPS=8

END_MSG="You have completed the entire scenario successfully. Congratulations!"

if [ ! -z "$1" ]; then
	if [ "$1" -gt 0 -a "$1" -lt $STEPS ]; then
		STEPS=$1
		END_MSG="You have completed the scenario up and including step $STEPS."
	fi
fi

VERBOSE=1

function vprint {
        # print if verbose is set
        if [ $VERBOSE -eq 1 ]; then
                echo "$1"
        fi
}

for STEP in $(seq 1 1 $STEPS); do
	vprint "Checking step $STEP ..."
	ITEMS=$(cat $JSON | jq '.[].scenario1[][] | select(.step == "step-'$STEP'").items' | jq length) 
	N=0
	while [[ $N -lt $ITEMS ]]; do 
		OPERATOR=$(jq '.[].scenario1[][] | select(.step == "step-'$STEP'").items['$N'].operator' $JSON | tr -d \") 
		TARGET=$(jq '.[].scenario1[][] | select(.step == "step-'$STEP'").items['$N'].target' $JSON| tr -d \") 
		FAILMSG=$(jq '.[].scenario1[][] | select(.step == "step-'$STEP'").items['$N'].failmsg' $JSON | sed -e "s/^.//" -e "s/.$//" -e 's/\\"/"/g')
		SUCCESSMSG=$(jq '.[].scenario1[][] | select(.step == "step-'$STEP'").items['$N'].successmsg' $JSON | sed -e "s/^.//" -e "s/.$//" -e 's/\\"/"/g') 
		FAILMSG=$(echo "$FAILMSG" | sed -e "s:\$TARGET:$TARGET:g")
		SUCCESSMSG=$(echo "$SUCCESSMSG" | sed -e "s:\$TARGET:$TARGET:g")

		case $OPERATOR in
		"file-exists")
			if [ ! -f $TARGET ]; then
				echo " $FAILMSG"
				exit 1
			else
				vprint " $SUCCESSMSG"
			fi
			;;
		"folder-exists")
			if [ ! -d $TARGET ]; then
				echo " $FAILMSG"
				exit 1
			else
				vprint " $SUCCESSMSG"
			fi
			;;
		"softlink-exists")
			if [ ! -L $TARGET ]; then
				echo " $FAILMSG"
				exit 1
			else
				vprint " $SUCCESSMSG"
			fi
			;;
		"tail1-contains")
			TARGETSTRING=$(jq '.[].scenario1[][] | select(.step == "step-'$STEP'").items['$N'].targetstring' $JSON| tr -d \") 
			if [ ! "$(tail -1 $TARGET)" == "$TARGETSTRING" ]; then
				echo " $FAILMSG"
				exit 1
			else
				vprint " $SUCCESSMSG"
			fi
			;;
		"file-contains")
			TARGETSTRING=$(jq '.[].scenario1[][] | select(.step == "step-'$STEP'").items['$N'].targetstring' $JSON| tr -d \") 
			grep -q "$TARGETSTRING" $TARGET
			if [ ! $? -eq 0 ]; then
				echo " $FAILMSG"
				exit 1
			else
				vprint " $SUCCESSMSG"
			fi
			;;
		"pkg-installed")
			pkg -l $TARGET &> /dev/null
			if [ $? -eq 1 ]; then
				echo " $FAILMSG"
				exit 1
			else
				vprint " $SUCCESSMSG"
			fi
			;;
		*)
			echo "Operator $OPERATOR unknown. This is fatal. Aborting."
			exit 1
			;;
		esac

		let N=$N+1
	done

	echo "Step $STEP finished successfully."

done

echo "$END_MSG"

